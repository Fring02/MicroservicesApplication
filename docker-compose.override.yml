version: '3.4'

services:
   catalogdb:
        image: mongo
        container_name: catalogdb
        restart: always
        volumes:
            - ${WEBAPP_STORAGE_HOME}/site:/data/db
        ports:
            - "27017:27017"

   catalog.api:
        image: fring02/microservicesapp:catalogapi
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - "CatalogDatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
        depends_on:
          - catalogdb
        volumes:
          - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
          - ${HOME}/.aspnet/https:/root/.aspnet/https/
        ports:
          - "8000:80"

   basketdb:
        image: redis
        container_name: basketdb
        restart: always
        volumes:
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
            - ./redis/volume/:/data
        ports:
            - "6379:6379"

   basket.api:
        image: fring02/microservicesapp:basketapi
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - "ConnectionStrings:Redis=basketdb:6379"
          - "EventBus:HostName=rabbitmq"
          - "EventBus:Username=guest"
          - "EventBus:Password=guest"
        depends_on:
            - basketdb
            - rabbitmq
        ports:
            - "5001:80"
        volumes:
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro


   rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        container_name: rabbitmq
        restart: always
        ports:
            - "5672:5672"
            - "15672:15672"
   orderingdb:
        image: postgres
        container_name: orderingdb
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: Rubin1!!
            POSTGRES_DB: OrderDb
        ports:
            - "5432:5432"

   ordering.api:
        depends_on:
            - orderingdb
            - rabbitmq
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - "EventBus:HostName=rabbitmq"
          - "EventBus:Username=guest"
          - "EventBus:Password=guest"
        ports:
          - "5000:80"
        volumes:
          - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

   ocelotapigateway:
        container_name: apigateway
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
          - catalog.api
          - basket.api
          - ordering.api
          - authorizationservice
        volumes:
          - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
          - ${HOME}/.aspnet/https:/root/.aspnet/https/
        ports:
          - "7000:80"


   shopping:
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - "ApiSettings:BaseAddress=http://apigateway:80"
        depends_on:
             - catalog.api
             - basket.api
             - ordering.api
             - ocelotapigateway
             - authorizationservice
        volumes:
             - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
             - ${HOME}/.aspnet/https:/root/.aspnet/https/
        ports:
         - "8001:80"


   authorizationservice:
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - "ConnectionStrings:DefaultConnection=Server=usersdb,1433; Database=Usersdb; User=sa; Password=Rubin1!!; connect timeout=100;"
        container_name: authorizationservice
        depends_on:
            - usersdb
        ports:
          - "8002:80"

   usersdb:
        image: "mcr.microsoft.com/mssql/server"
        environment:
            SA_PASSWORD: "Rubin1!!"
            ACCEPT_EULA: "Y"
        container_name: usersdb
        ports:
            - "1433:1433"